#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["cylinder", "CylinderTerrain", "FlatTerrain", "map_material", "CylinderTerrainMaterial", "FlatTerrainMaterial"]
    def Material "map_material"
    {
        float inputs:HeightOffset = -0.5 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-558.64465, -231.94974)
                    float2 sizeInSubgraph = (148.5, 53)
                    int stackingOrderInSubgraph = 1570
                }
            }
        )
        float inputs:HeightScale = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-310.40234, 337.1914)
                    float2 sizeInSubgraph = (143.5, 53)
                    int stackingOrderInSubgraph = 1569
                }
            }
        )
        float inputs:Scale = 0.2 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1079.6172, 192.01172)
                    float2 sizeInSubgraph = (102, 53)
                    int stackingOrderInSubgraph = 1569
                }
            }
        )
        color3f inputs:SideColor = (1, 0, 0) (
            colorSpace = "lin_srgb"
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (189.85938, -485.35938)
                    float2 sizeInSubgraph = (133, 53)
                    int stackingOrderInSubgraph = 1568
                }
            }
        )
        asset inputs:Texture = @noise_combo.png@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-756.2539, 37.61328)
                    float2 sizeInSubgraph = (115.5, 53)
                    int stackingOrderInSubgraph = 1568
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/map_material/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/map_material/GeometryModifier.outputs:out>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1071.498, 34.825893)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1360

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/map_material/Mix.outputs:out>
            float inputs:metallic
            float3 inputs:normal
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (682.9913, -144.25722)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 1276
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:diffuseColor"]
        }

        def Shader "GeometryModifier"
        {
            uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
            float3 inputs:bitangent
            color4f inputs:color
            float3 inputs:modelPositionOffset.connect = </Root/map_material/CombinePosition.outputs:out>
            float3 inputs:normal
            float4 inputs:userAttribute.connect = </Root/map_material/CombineY.outputs:out>
            half2 inputs:userAttributeHalf2_0
            half2 inputs:userAttributeHalf2_1
            half4 inputs:userAttributeHalf4_0
            half4 inputs:userAttributeHalf4_1
            half4 inputs:userAttributeHalf4_2
            half4 inputs:userAttributeHalf4_3
            float2 inputs:uv0
            float2 inputs:uv1
            token outputs:out
            float2 ui:nodegraph:node:pos = (606.92554, 232.58511)
            float2 ui:nodegraph:node:size = (196.5, 325)
            int ui:nodegraph:node:stackingOrder = 1494
        }

        def Shader "CombinePosition"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1.connect = None
            float inputs:in2.connect = </Root/map_material/Add.outputs:out>
            float inputs:in3.connect = None
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (264.47052, 134.07831)
            float2 ui:nodegraph:node:size = (186.5, 54)
            int ui:nodegraph:node:stackingOrder = 1496
        }

        def Shader "SeparateRGB"
        {
            uniform token info:id = "ND_separate3_color3"
            color3f inputs:in.connect = </Root/map_material/TextureSampler.outputs:out>
            float outputs:outb
            float outputs:outg
            float outputs:outr
            float2 ui:nodegraph:node:pos = (-317.21536, 214.25217)
            float2 ui:nodegraph:node:size = (134, 145)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/map_material/SeparateY.outputs:outy>
            float inputs:in2.connect = </Root/map_material/Multiply_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-33.27306, 203.0232)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-1164.4132, 86.254875)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 1491
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "SwizzleXZ"
        {
            uniform token info:id = "ND_swizzle_vector3_vector2"
            string inputs:channels = "xz"
            prepend float3 inputs:in.connect = </Root/map_material/Position.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-909.7041, 96.02921)
            float2 ui:nodegraph:node:size = (150.5, 53)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "SeparateY"
        {
            uniform token info:id = "ND_separate3_vector3"
            float3 inputs:in.connect = </Root/map_material/Position.outputs:out>
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (-545.92883, -109.384834)
            float2 ui:nodegraph:node:size = (114.5, 145)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/map_material/SeparateRGB.outputs:outg>
            float inputs:in2.connect = </Root/map_material.inputs:HeightScale>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-153.48358, 247.96017)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/map_material/SwizzleXZ.outputs:out>
            float2 inputs:in2.connect = </Root/map_material/Swizzle.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-754.1101, 109.62313)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Swizzle"
        {
            uniform token info:id = "ND_swizzle_float_vector2"
            string inputs:channels = "xx"
            float inputs:in.connect = </Root/map_material.inputs:Scale>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-921.231, 193.637)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/map_material/Multiply_4.outputs:out>
            float inputs:in2.connect = </Root/map_material/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (77.989044, 132.99098)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/map_material.inputs:HeightOffset>
            float inputs:in2.connect = </Root/map_material/SeparateY.outputs:outy>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-388.90677, -182.62294)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1491
        }

        def Shader "Step"
        {
            uniform token info:id = "ND_realitykit_step_float"
            float inputs:edge.connect = </Root/map_material/Separate4.outputs:outx>
            float inputs:in.connect = </Root/map_material/StepThreshold.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (177.43869, -349.7029)
            float2 ui:nodegraph:node:size = (129, 127)
            int ui:nodegraph:node:stackingOrder = 1541
        }

        def Shader "StepThreshold"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0.999
            float outputs:out
            float2 ui:nodegraph:node:pos = (-21.24597, -353.6912)
            float2 ui:nodegraph:node:size = (175, 53)
            int ui:nodegraph:node:stackingOrder = 1566
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg.connect = </Root/map_material/TextureSampler.outputs:out>
            color3f inputs:fg.connect = </Root/map_material.inputs:SideColor>
            prepend float inputs:mix.connect = </Root/map_material/Step.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (422.28848, -346.27304)
            float2 ui:nodegraph:node:size = (109, 145)
            int ui:nodegraph:node:stackingOrder = 1412
        }

        def Shader "CombineY"
        {
            uniform token info:id = "ND_combine4_vector4"
            prepend float inputs:in1.connect = </Root/map_material/SeparateY.outputs:outy>
            float4 outputs:out
            float2 ui:nodegraph:node:pos = (275.38123, 265.2602)
            float2 ui:nodegraph:node:size = (144, 72)
            int ui:nodegraph:node:stackingOrder = 1554
        }

        def Shader "SurfaceCustomAttribute"
        {
            uniform token info:id = "ND_realitykit_surface_custom_attribute"
            float4 outputs:customAttribute
            float2 ui:nodegraph:node:pos = (-206.14017, -266.84305)
            float2 ui:nodegraph:node:size = (229, 81)
            int ui:nodegraph:node:stackingOrder = 1565
        }

        def Shader "Separate4"
        {
            uniform token info:id = "ND_separate4_vector4"
            float4 inputs:in.connect = </Root/map_material/SurfaceCustomAttribute.outputs:customAttribute>
            float outputs:outx
            float2 ui:nodegraph:node:pos = (-9.186696, -233.02275)
            float2 ui:nodegraph:node:size = (115.5, 163)
            int ui:nodegraph:node:stackingOrder = 1564
        }

        def Shader "TextureSampler"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            asset inputs:file.connect = </Root/map_material.inputs:Texture>
            string inputs:filtertype
            float2 inputs:texcoord.connect = </Root/map_material/Multiply_2.outputs:out>
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-564.2184, 79.11303)
            float2 ui:nodegraph:node:size = (150, 199)
            int ui:nodegraph:node:stackingOrder = 1569
        }
    }

    def Material "FlatTerrainMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "TerrainImage", "GeometryModifier", "HeightMapImage", "OffsetByMinHeight", "PixelValuesToHeightValues", "CombineXYZ"]
        asset inputs:HeightMap = @heightmap.png@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1244.3347, 226.2308)
                    float2 sizeInSubgraph = (136.5, 53)
                    int stackingOrderInSubgraph = 2294
                }
            }
        )
        float inputs:MinHeight = 630 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-711.3728, 442.0759)
                    float2 sizeInSubgraph = (132, 53)
                    int stackingOrderInSubgraph = 2294
                }
            }
        )
        float inputs:Scale = 11468.365 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-706.9513, 545.92456)
                    float2 sizeInSubgraph = (102, 53)
                    int stackingOrderInSubgraph = 2294
                }
            }
        )
        asset inputs:Terrain = @terrain.png@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-329.82114, 60.42599)
                    float2 sizeInSubgraph = (115.5, 53)
                    int stackingOrderInSubgraph = 2115
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/FlatTerrainMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/FlatTerrainMaterial/GeometryModifier.outputs:out>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (297.98047, 241.15234)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 30

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/FlatTerrainMaterial/TerrainImage.outputs:out>
            float inputs:metallic
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (74.25, 99.5)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 2074
        }

        def Shader "GeometryModifier"
        {
            uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
            float3 inputs:bitangent
            color4f inputs:color
            float3 inputs:modelPositionOffset.connect = </Root/FlatTerrainMaterial/CombineXYZ.outputs:out>
            float3 inputs:normal
            float4 inputs:userAttribute
            half4 inputs:userAttributeHalf4_0
            half4 inputs:userAttributeHalf4_1
            float2 inputs:uv0
            float2 inputs:uv1
            token outputs:out
            float2 ui:nodegraph:node:pos = (49.285145, 463.65247)
            float2 ui:nodegraph:node:size = (196.5, 325)
            int ui:nodegraph:node:stackingOrder = 1545
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uv0", "inputs:userAttributeHalf4_1", "inputs:uv0", "inputs:color", "inputs:modelPositionOffset", "inputs:modelPositionOffset", "inputs:color", "inputs:modelPositionOffset", "inputs:uv1"]
        }

        def NodeGraph "PixelValuesToHeightValues"
        {
            reorder nameChildren = ["Multiply_2", "Multiply", "Add", "Add_1", "Multiply_1", "Add_2", "RGB", "MetersToCm"]
            color3f inputs:RGB_in (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-281.1795, 12.480778)
                        float2 sizeInSubgraph = (133, 53)
                        int stackingOrderInSubgraph = 1767
                    }
                }
            )
            color3f inputs:RGB_in.connect = </Root/FlatTerrainMaterial/HeightMapImage.outputs:out>
            float outputs:Height (
                customData = {
                    dictionary realitykit = {
                        int stackingOrderInSubgraph = 309
                    }
                }
            )
            float outputs:Height.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Subtract.outputs:out>
            float2 ui:nodegraph:node:pos = (-754.61554, 314.52444)
            float2 ui:nodegraph:node:size = (218.5, 109)
            int ui:nodegraph:node:stackingOrder = 2294
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:Height", "outputs:Height", "outputs:Height", "outputs:Height", "outputs:Height", "inputs:RGB_in", "outputs:Height"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1079.749, 212.15881)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (178, 81)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1765

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 256
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply_5.outputs:out>
                float inputs:in2 = 256
                float outputs:out
                float2 ui:nodegraph:node:pos = (385.2696, 117.2816)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1442
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in2", "outputs:out", "outputs:out", "outputs:out", "outputs:out", "outputs:out"]
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Add_2.outputs:out>
                float inputs:in2 = 0.1
                float outputs:out
                float2 ui:nodegraph:node:pos = (735.35516, 236.86267)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1445
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "outputs:out", "inputs:in2", "inputs:in1", "outputs:out"]
            }

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply_3.outputs:out>
                float inputs:in2.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply_2.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (506.11743, 32.1287)
                float2 ui:nodegraph:node:size = (61.5, 36.5)
                int ui:nodegraph:node:stackingOrder = 1440
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in2", "inputs:in1", "inputs:in1"]
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 65536
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply_4.outputs:out>
                float inputs:in2 = 256
                float outputs:out
                float2 ui:nodegraph:node:pos = (268.75055, -56.00496)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1438
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in1", "inputs:in1", "outputs:out", "inputs:in2"]
            }

            def Shader "Add_2"
            {
                uniform token info:id = "ND_add_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Add_1.outputs:out>
                float inputs:in2.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply_6.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (614.4651, 227.88823)
                float2 ui:nodegraph:node:size = (61.5, 36.5)
                int ui:nodegraph:node:stackingOrder = 1455
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "inputs:in1", "inputs:in2", "outputs:out", "outputs:out", "inputs:in1"]
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply_1.outputs:out>
                float inputs:in2 = 256
                float outputs:out
                float2 ui:nodegraph:node:pos = (388.42578, -55.316406)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1439
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "outputs:out", "inputs:in1"]
            }

            def Shader "Multiply_6"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/RGB_1.outputs:outb>
                float inputs:in2 = 255
                float outputs:out
                float2 ui:nodegraph:node:pos = (128.69531, 235.84766)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1443
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "inputs:in2"]
            }

            def Shader "Multiply_5"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/RGB_1.outputs:outg>
                float inputs:in2 = 255
                float outputs:out
                float2 ui:nodegraph:node:pos = (129.66016, 116.953125)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1441
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out"]
            }

            def Shader "Multiply_4"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 0.004
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/RGB_1.outputs:outr>
                float inputs:in2 = 255
                float outputs:out
                float2 ui:nodegraph:node:pos = (134.94922, -55.859375)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1454
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "outputs:out"]
            }

            def Shader "Subtract"
            {
                uniform token info:id = "ND_subtract_float"
                float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues/Multiply.outputs:out>
                float inputs:in2 = 10000
                float outputs:out
                float2 ui:nodegraph:node:pos = (861.09375, 234.96094)
                float2 ui:nodegraph:node:size = (61.5, 36)
                int ui:nodegraph:node:stackingOrder = 1762
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "inputs:in2", "outputs:out"]
            }

            def Shader "RGB_1"
            {
                uniform token info:id = "ND_separate3_color3"
                color3f inputs:in.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues.inputs:RGB_in>
                float outputs:outb
                float outputs:outg
                float outputs:outr
                float2 ui:nodegraph:node:pos = (-110.478226, 28.270294)
                float2 ui:nodegraph:node:size = (102, 145)
                int ui:nodegraph:node:stackingOrder = 1457
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in", "inputs:in", "outputs:outg", "outputs:outr", "outputs:outg", "inputs:in", "outputs:outr"]
            }
        }

        def Shader "CombineXYZ"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1 = 0
            float inputs:in1.connect = None
            float inputs:in2 = 0
            float inputs:in2.connect = </Root/FlatTerrainMaterial/Multiply.outputs:out>
            float inputs:in3 = 0
            float inputs:in3.connect = None
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-220.32747, 358.40045)
            float2 ui:nodegraph:node:size = (162.5, 54)
            int ui:nodegraph:node:stackingOrder = 2295
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in2"]
        }

        def Shader "HeightMapImage"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            asset inputs:file = @heightmap.png@ (
                colorSpace = "lin_displayp3"
            )
            asset inputs:file.connect = </Root/FlatTerrainMaterial.inputs:HeightMap>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-1024.3468, 247.3526)
            float2 ui:nodegraph:node:size = (158, 199)
            int ui:nodegraph:node:stackingOrder = 2294
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out", "outputs:out", "outputs:out", "inputs:default", "inputs:uaddressmode", "inputs:default", "inputs:filtertype", "inputs:filtertype", "inputs:uaddressmode", "outputs:out", "inputs:filtertype", "inputs:uaddressmode", "inputs:file", "inputs:vaddressmode", "inputs:uaddressmode", "inputs:file", "inputs:uaddressmode", "inputs:uaddressmode", "inputs:default", "inputs:vaddressmode", "inputs:vaddressmode"]
        }

        def Shader "TerrainImage"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            asset inputs:file = @terrain.png@ (
                colorSpace = "srgb_texture"
            )
            asset inputs:file.connect = </Root/FlatTerrainMaterial.inputs:Terrain>
            string inputs:filtertype
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-126.87704, 98.92521)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 2227
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:texcoord", "inputs:uaddressmode"]
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 11468.365
            float inputs:in1.connect = </Root/FlatTerrainMaterial.inputs:Scale>
            float inputs:in2 = 100000000
            float outputs:out
            float2 ui:nodegraph:node:pos = (-548.92096, 551.94385)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 2294
        }

        def Shader "OffsetByMinHeight"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/FlatTerrainMaterial/PixelValuesToHeightValues.outputs:Height>
            float inputs:in2 = 630
            float inputs:in2.connect = </Root/FlatTerrainMaterial.inputs:MinHeight>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-567.5729, 358.50168)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 2294
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out", "inputs:in1", "outputs:out"]
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/FlatTerrainMaterial/OffsetByMinHeight.outputs:out>
            float inputs:in2.connect = </Root/FlatTerrainMaterial/Divide.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-438.73508, 358.44705)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2294
        }
    }

    def Material "CylinderTerrainMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "GeometryModifier", "CombineOffset", "Position", "SeparateY", "Mix", "Step", "StepThreshold", "Separate4", "SurfaceCustomAttribute", "TerrainImage", "Multiply_3", "CombineTextureCoordinates", "Multiply_5", "SeparateToTextureCoordinates", "Multiply", "PixelValuesToHeightValues", "HeightMapImage", "Multiply_6", "Divide", "CombineY", "Add_2", "Add_1", "Swizzle_1", "Multiply_4", "SwizzleXZ_1"]
        asset inputs:HeightMap = @../TerrainMap/Project/Sources/TerrainMap/TerrainMap.rkassets/heightmap.png@ (
            colorSpace = ""
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-771.6069, 402.46555)
                    float2 sizeInSubgraph = (136.5, 53)
                    int stackingOrderInSubgraph = 6139
                }
            }
        )
        float inputs:Scale_1 = 0.2 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1052.9027, 594.85443)
                    float2 sizeInSubgraph = (114.5, 53)
                    int stackingOrderInSubgraph = 6359
                }
            }
        )
        float inputs:ScaleFromMeters = 11468.365 (
            colorSpace = ""
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-303.14062, 544.92053)
                    float2 sizeInSubgraph = (177, 53)
                    int stackingOrderInSubgraph = 5971
                }
            }
        )
        color3f inputs:SideColor = (0.22418654, 0.1723084, 0.09809641) (
            colorSpace = "srgb_displayp3"
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (322.59552, -289.41595)
                    float2 sizeInSubgraph = (133, 53)
                    int stackingOrderInSubgraph = 6337
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/CylinderTerrainMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/CylinderTerrainMaterial/GeometryModifier.outputs:out>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (950.8611, 35.281796)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 4701

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/CylinderTerrainMaterial/Mix.outputs:out>
            float inputs:metallic
            float3 inputs:normal
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (682.9913, -144.25722)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 1649
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:diffuseColor"]
        }

        def Shader "GeometryModifier"
        {
            uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
            float3 inputs:bitangent
            color4f inputs:color
            float3 inputs:modelPositionOffset.connect = </Root/CylinderTerrainMaterial/CombineOffset.outputs:out>
            float3 inputs:normal
            float4 inputs:userAttribute.connect = </Root/CylinderTerrainMaterial/CombineY.outputs:out>
            half2 inputs:userAttributeHalf2_0
            half2 inputs:userAttributeHalf2_1
            half4 inputs:userAttributeHalf4_0
            half4 inputs:userAttributeHalf4_1
            half4 inputs:userAttributeHalf4_2
            half4 inputs:userAttributeHalf4_3
            float2 inputs:uv0
            float2 inputs:uv1
            token outputs:out
            float2 ui:nodegraph:node:pos = (606.92554, 232.58511)
            float2 ui:nodegraph:node:size = (196.5, 325)
            int ui:nodegraph:node:stackingOrder = 5383
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:bitangent"]
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-1191.1945, 177.24435)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 6164
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "SeparateY"
        {
            uniform token info:id = "ND_separate3_vector3"
            float3 inputs:in.connect = </Root/CylinderTerrainMaterial/Position.outputs:out>
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (-83.78757, 188.81897)
            float2 ui:nodegraph:node:size = (114.5, 145)
            int ui:nodegraph:node:stackingOrder = 6133
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:outz", "outputs:outx"]
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg.connect = </Root/CylinderTerrainMaterial/TerrainImage.outputs:out>
            color3f inputs:fg.connect = </Root/CylinderTerrainMaterial.inputs:SideColor>
            float inputs:mix.connect = </Root/CylinderTerrainMaterial/Step.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (493.27438, -149.90547)
            float2 ui:nodegraph:node:size = (109, 145)
            int ui:nodegraph:node:stackingOrder = 4944
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:bg", "inputs:bg", "inputs:bg", "inputs:bg", "inputs:mix", "inputs:bg"]
        }

        def Shader "StepThreshold"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0.999
            float outputs:out
            float2 ui:nodegraph:node:pos = (1.1326877, -170.99841)
            float2 ui:nodegraph:node:size = (175, 53)
            int ui:nodegraph:node:stackingOrder = 5086
        }

        def Shader "Separate4"
        {
            uniform token info:id = "ND_separate4_vector4"
            float4 inputs:in.connect = </Root/CylinderTerrainMaterial/SurfaceCustomAttribute.outputs:customAttribute>
            float outputs:outw
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (9.9801, -23.39505)
            float2 ui:nodegraph:node:size = (115.5, 163)
            int ui:nodegraph:node:stackingOrder = 5375
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:outy", "inputs:in"]
        }

        def Shader "SurfaceCustomAttribute"
        {
            uniform token info:id = "ND_realitykit_surface_custom_attribute"
            float4 outputs:customAttribute
            float2 ui:nodegraph:node:pos = (-238.87775, -57.35257)
            float2 ui:nodegraph:node:size = (229, 81)
            int ui:nodegraph:node:stackingOrder = 5086
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:customAttribute", "outputs:customAttribute"]
        }

        def Shader "TerrainImage"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default = (0.9222301, 0.90086865, 0) (
                colorSpace = "lin_srgb"
            )
            asset inputs:file = @../TerrainMap/Project/Sources/TerrainMap/TerrainMap.rkassets/terrain.png@
            string inputs:filtertype = "linear"
            float2 inputs:texcoord.connect = </Root/CylinderTerrainMaterial/CombineTextureCoordinates.outputs:out>
            string inputs:uaddressmode = "constant"
            string inputs:vaddressmode = "constant"
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (4.610175, -354.74515)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 5156
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:filtertype", "inputs:vaddressmode", "inputs:filtertype", "inputs:file", "inputs:vaddressmode", "inputs:uaddressmode", "inputs:texcoord", "inputs:vaddressmode", "inputs:texcoord", "inputs:vaddressmode", "inputs:texcoord", "inputs:file", "inputs:file", "inputs:vaddressmode", "inputs:texcoord", "inputs:file", "inputs:default", "inputs:uaddressmode"]
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/Divide_2.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-585.862, -311.34863)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 6332
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "outputs:out", "inputs:in1", "inputs:in1", "inputs:in2", "outputs:out"]
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/Divide_1.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-582.2129, -389.5497)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 6349
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out", "inputs:in1", "inputs:in2", "outputs:out"]
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/SeparateY.outputs:outy>
            float inputs:in2.connect = </Root/CylinderTerrainMaterial/Multiply_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (75.03624, 331.99652)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 6336
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
        }

        def NodeGraph "PixelValuesToHeightValues"
        {
            reorder nameChildren = ["Multiply_2", "Multiply", "Add", "Add_1", "Multiply_1", "Add_2", "RGB", "MetersToCm"]
            color3f inputs:RGB_in (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-193.12834, 20.717365)
                        float2 sizeInSubgraph = (133, 53)
                        int stackingOrderInSubgraph = 1804
                    }
                }
            )
            color3f inputs:RGB_in.connect = </Root/CylinderTerrainMaterial/HeightMapImage.outputs:out>
            float outputs:Height (
                customData = {
                    dictionary realitykit = {
                        int stackingOrderInSubgraph = 309
                    }
                }
            )
            float outputs:Height.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Subtract.outputs:out>
            float2 ui:nodegraph:node:pos = (-289.6598, 418.86978)
            float2 ui:nodegraph:node:size = (218.5, 109)
            int ui:nodegraph:node:stackingOrder = 5971
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:Height", "outputs:Height", "outputs:Height", "outputs:Height", "outputs:Height", "inputs:RGB_in", "outputs:Height", "outputs:Height"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (939.6478, 220.75179)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (178, 81)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2018

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 256
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply_5.outputs:out>
                float inputs:in2 = 256
                float outputs:out
                float2 ui:nodegraph:node:pos = (337.97708, 121.39424)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1899
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in2", "outputs:out", "outputs:out", "outputs:out", "outputs:out", "outputs:out"]
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Add_2.outputs:out>
                float inputs:in2 = 0.1
                float outputs:out
                float2 ui:nodegraph:node:pos = (667.29584, 240.28516)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1950
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "outputs:out", "inputs:in2", "inputs:in1", "outputs:out"]
            }

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply_3.outputs:out>
                float inputs:in2.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply_2.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (458.82492, 36.241337)
                float2 ui:nodegraph:node:size = (61.5, 36.5)
                int ui:nodegraph:node:stackingOrder = 1899
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in2", "inputs:in1", "inputs:in1"]
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 65536
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply_4.outputs:out>
                float inputs:in2 = 256
                float outputs:out
                float2 ui:nodegraph:node:pos = (243.30537, -51.892323)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1860
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "inputs:in1", "inputs:in1", "outputs:out", "inputs:in2"]
            }

            def Shader "Add_2"
            {
                uniform token info:id = "ND_add_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Add_1.outputs:out>
                float inputs:in2.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply_6.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (567.1726, 232.00087)
                float2 ui:nodegraph:node:size = (61.5, 36.5)
                int ui:nodegraph:node:stackingOrder = 1899
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "inputs:in1", "inputs:in2", "outputs:out", "outputs:out", "inputs:in1"]
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply_1.outputs:out>
                float inputs:in2 = 256
                float outputs:out
                float2 ui:nodegraph:node:pos = (341.13327, -51.20377)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1899
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "outputs:out", "inputs:in1"]
            }

            def Shader "Multiply_6"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/RGB_1.outputs:outb>
                float inputs:in2 = 255
                float outputs:out
                float2 ui:nodegraph:node:pos = (128.69531, 235.84766)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1443
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "inputs:in2"]
            }

            def Shader "Multiply_5"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/RGB_1.outputs:outg>
                float inputs:in2 = 255
                float outputs:out
                float2 ui:nodegraph:node:pos = (129.66016, 116.953125)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1441
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out"]
            }

            def Shader "Multiply_4"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 0.004
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/RGB_1.outputs:outr>
                float inputs:in2 = 255
                float outputs:out
                float2 ui:nodegraph:node:pos = (134.94922, -55.859375)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 1454
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "outputs:out"]
            }

            def Shader "Subtract"
            {
                uniform token info:id = "ND_subtract_float"
                float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues/Multiply.outputs:out>
                float inputs:in2 = 10000
                float outputs:out
                float2 ui:nodegraph:node:pos = (777.5625, 242.58092)
                float2 ui:nodegraph:node:size = (61.5, 36)
                int ui:nodegraph:node:stackingOrder = 2018
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "inputs:in2", "outputs:out"]
            }

            def Shader "RGB_1"
            {
                uniform token info:id = "ND_separate3_color3"
                color3f inputs:in.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues.inputs:RGB_in>
                float outputs:outb
                float outputs:outg
                float outputs:outr
                float2 ui:nodegraph:node:pos = (-22.427061, 36.50688)
                float2 ui:nodegraph:node:size = (102, 145)
                int ui:nodegraph:node:stackingOrder = 1804
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in", "inputs:in", "outputs:outg", "outputs:outr", "outputs:outg", "inputs:in", "outputs:outr"]
            }
        }

        def Shader "HeightMapImage"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            asset inputs:file = @heightmap.png@ (
                colorSpace = "lin_displayp3"
            )
            asset inputs:file.connect = </Root/CylinderTerrainMaterial.inputs:HeightMap>
            string inputs:filtertype
            float2 inputs:texcoord.connect = </Root/CylinderTerrainMaterial/Multiply_4.outputs:out>
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-542.0668, 435.2675)
            float2 ui:nodegraph:node:size = (158, 199)
            int ui:nodegraph:node:stackingOrder = 5971
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out", "outputs:out", "outputs:out", "outputs:out", "inputs:default", "inputs:uaddressmode", "inputs:default", "inputs:filtertype", "inputs:filtertype", "inputs:uaddressmode", "outputs:out", "inputs:filtertype", "inputs:uaddressmode", "inputs:file", "inputs:vaddressmode", "inputs:uaddressmode", "inputs:file", "inputs:uaddressmode", "inputs:uaddressmode", "inputs:default", "inputs:vaddressmode", "inputs:vaddressmode"]
        }

        def Shader "Multiply_6"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/PixelValuesToHeightValues.outputs:Height>
            float inputs:in2.connect = </Root/CylinderTerrainMaterial/Divide.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-62.81878, 461.07486)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 6119
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 11468.365
            float inputs:in1.connect = </Root/CylinderTerrainMaterial.inputs:ScaleFromMeters>
            float inputs:in2 = 100000000
            float outputs:out
            float2 ui:nodegraph:node:pos = (-160.3184, 546.56494)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 5971
        }

        def Shader "CombineY"
        {
            uniform token info:id = "ND_combine4_vector4"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/SeparateY.outputs:outy>
            float inputs:in2
            float inputs:in3
            float4 outputs:out
            float2 ui:nodegraph:node:pos = (313.25287, 251.56392)
            float2 ui:nodegraph:node:size = (144, 72)
            int ui:nodegraph:node:stackingOrder = 6334
        }

        def Shader "Add_2"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/Multiply_5.outputs:out>
            float inputs:in2 = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-469.41092, -390.0397)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 6323
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "outputs:out", "outputs:out"]
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/Multiply_3.outputs:out>
            float inputs:in2 = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-468.7552, -312.189)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 6323
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2", "inputs:in2"]
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/CylinderTerrainMaterial/SwizzleXZ_1.outputs:out>
            float2 inputs:in2.connect = </Root/CylinderTerrainMaterial/Swizzle_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-730.899, 474.87582)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 6137
        }

        def Shader "SwizzleXZ_1"
        {
            uniform token info:id = "ND_swizzle_vector3_vector2"
            string inputs:channels = "xz"
            float3 inputs:in.connect = </Root/CylinderTerrainMaterial/Position.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-961.71594, 468.62595)
            float2 ui:nodegraph:node:size = (163, 53)
            int ui:nodegraph:node:stackingOrder = 6356
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "SeparateToTextureCoordinates"
        {
            uniform token info:id = "ND_separate3_vector3"
            float3 inputs:in.connect = </Root/CylinderTerrainMaterial/Position.outputs:out>
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (-943.7018, -368.37494)
            float2 ui:nodegraph:node:size = (241, 145)
            int ui:nodegraph:node:stackingOrder = 6348
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:outy", "outputs:outz", "outputs:outy", "outputs:outy"]
        }

        def Shader "CombineTextureCoordinates"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/Add_2.outputs:out>
            float inputs:in2.connect = </Root/CylinderTerrainMaterial/Add_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-249.54951, -352.11072)
            float2 ui:nodegraph:node:size = (250, 53)
            int ui:nodegraph:node:stackingOrder = 6323
        }

        def Shader "Step"
        {
            uniform token info:id = "ND_realitykit_step_float"
            float inputs:edge.connect = </Root/CylinderTerrainMaterial/Separate4.outputs:outx>
            float inputs:in.connect = </Root/CylinderTerrainMaterial/StepThreshold.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (209.63095, -34.816772)
            float2 ui:nodegraph:node:size = (129, 127)
            int ui:nodegraph:node:stackingOrder = 6325
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "CombineOffset"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1.connect = None
            float inputs:in2.connect = </Root/CylinderTerrainMaterial/Multiply.outputs:out>
            float inputs:in3.connect = None
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (290.62955, 131.00569)
            float2 ui:nodegraph:node:size = (175, 54)
            int ui:nodegraph:node:stackingOrder = 6335
        }

        def Shader "Divide_1"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/SeparateToTextureCoordinates.outputs:outx>
            float inputs:in2 = 2
            float outputs:out
            float2 ui:nodegraph:node:pos = (-723.0903, -395.81073)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 6352
        }

        def Shader "Divide_2"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/CylinderTerrainMaterial/SeparateToTextureCoordinates.outputs:outz>
            float inputs:in2 = 2
            float outputs:out
            float2 ui:nodegraph:node:pos = (-724.97485, -316.407)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 6353
        }

        def Shader "Swizzle_1"
        {
            uniform token info:id = "ND_swizzle_float_vector2"
            string inputs:channels = "xx"
            float inputs:in.connect = </Root/CylinderTerrainMaterial.inputs:Scale_1>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-880.073, 602.6092)
            float2 ui:nodegraph:node:size = (145.5, 53)
            int ui:nodegraph:node:stackingOrder = 6360
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:channels"]
        }
    }

    def "FlatTerrain" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @FlatTerrain.usdz@
    )
    {
        rel material:binding = </Root/FlatTerrainMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        float3 xformOp:scale = (0.5, 1, 0.5)
        float3 xformOp:translate = (4.5, 1.1920929e-7, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Looks"
        {
            over "DioramaTerrain_matSG" (
                active = false
            )
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 109.5)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
            }
        }
    }

    def "CylinderTerrain" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @cylinder.usdc@
    )
    {
        rel material:binding = </Root/CylinderTerrainMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (2.5, -1.1920929e-7, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "cylinder" (
        active = true
        prepend references = @cylinder.usdc@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "cylinder" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/map_material> (
                bindMaterialAs = "weakerThanDescendants"
            )
        }
    }
}

